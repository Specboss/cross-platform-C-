@page "/"
@inject Microsoft.Extensions.Logging.ILogger<int> logger
@inject Microsoft.Extensions.Options.IOptions<AppConfiguration> options

  <style type="text/css">
   body {
    font: 10pt Arial, Helvetica, sans-serif; /* Шрифт на веб-странице */
    background: #fff; /* Цвет фона */
    margin: 0; /* Убираем отступы */
   }
   h2 {
    font-size: 1.1em; /* Размер шрифта */
    color: #752641; /* Цвет текста */
    margin-bottom: 0; /* Отступ снизу */
   }
   #container {
    width: 500px; /* Ширина макета */
    margin: 0 auto; /* Выравниваем по центру */
    position: relative; /* Относительное позиционирование */
   }
   #header {
    background: #8fa09b; /* Цвет фона */
    font-size: 24pt; /* Размер текста */
    font-weight: bold; /* Жирное начертание */
    color: #edeed5; /* Цвет текста */
    padding: 5px; /* Отступы вокруг текста */
   }
   #content {
    margin-right: 130px; /* Отступ справа */
    padding: 10px; /* Поля вокруг текста */
    border-right: 1px dashed #183533; /* Линия справа */
   }
   #content p {
    margin-top: 0.3em /* Отступ сверху */
   }
   #sidebar {
    position: absolute; /* Абсолютное позиционирование */
    right: 0; /* Положение от правого края */
    top: 60px; /* Положение от верхнего края */
    width: 120px; /* Ширина */
   }
   #footer {
    background: #8fa09b; /* Цвет фона */
    color: #fff; /* Цвет текста */
    padding: 5px; /* Отступы вокруг текста */
   }
  </style>

  <div id="container">
   <div id="header">BOBSTONES</div>
   <div id="content">

        <div id="content">@answer</div>

   </div>
   <div id="sidebar">
        <input @bind-value="@command" />

        <button @onclick="START">
            START<br />
        </button>

        <button @onclick="OK">
            OK<br />
        </button>

        <button @onclick="ME">
            ME<br />
        </button>
        
        <button @onclick="YOU">
            YOU
        </button>
        
        <button @onclick="ODD">
            ODD
        </button>

        <button @onclick="EVEN">
            EVEN
        </button>

        <button  @onclick = "YES"> 
            YES
        </button>

        <button @onclick="NO">
            NO
        </button>

        <button @onclick="RIGHT">
            RIGHT
        </button>

        <button @onclick="WRONG">
            WRONG
        </button>
   </div>
   
  </div>

@code {
    string command = " ";
    private string answer = " ";
    private void START()
    {
        Update();
    }
    private void OK()
    {
        WriteCommandInFile("OK");
        Update();

    }
    private void ME()
    {
        WriteCommandInFile("ME");
        Update();

    }
    private void YOU()
    {
        WriteCommandInFile("YOU");
        Update();
    }
    private void ODD()
    {
        WriteCommandInFile("ODD");

        Update();
    }
    private void EVEN()
    {
        WriteCommandInFile("EVEN");

        Update();
    }
    private void YES()
    {
        WriteCommandInFile("YES");
        Update();

    }
    private void NO()
    {
        WriteCommandInFile("NO");
        Update();

    }
    private void RIGHT()
    {
        WriteCommandInFile("RIGHT");
        Update();

    }
    private void WRONG()
    {
        WriteCommandInFile("WRONG");
        Update();

    }
    void Update()
    {
        answer = GetAnswerFromFile();
        logger.LogInformation("HELLO WORLD");
        logger.LogInformation(answer);
    }
    private string GetAnswerFromFile()
    {
        string rt = " ";
        var output = OutputPath();
        while (true)
        {
            if (InputIsEmpty() == false)
            {
                rt = File.ReadAllText(output);
                return rt;
            }
        }
    }

    private bool InputIsEmpty()
    {
        var output = OutputPath();
        try
        {
            return File.ReadAllText(output) == String.Empty;
        }
        catch (System.IO.IOException)
        {
            return true;
        }
    }
    private void WriteCommandInFile(string contain)
    {
        var input = InputPath();
        while (true)
        {
            try
            {
                File.AppendAllText(input, contain);
                return;
            }
            catch (System.IO.IOException)
            {

            }

        }
    }
    
    private string OutputPath() =>
        options.Value.IoDirectoryPath
            + @"\output.txt";

    private string InputPath() =>
        options.Value.IoDirectoryPath
            + @"\input.txt";
}
